Set authenticatedUserId to None

Define method FunctionCallingServiceInitialize with argument context
    Set authenticatedUserId to Fetch userId from context
End method


Define method CallFunction with argument function
    Set functionAction to Call internal.ToUpper with argument (action of function)

    If functionAction is equal to "GETINFOFORACCOUNT" then
        Return Call internal.GetAccountInfo with argument (actionParameter of function)
    Else if functionAction is equal to "GETTRANSACTIONSFORACCOUNT" then
        Return Call internal.GetTransactionsForAccount with argument (actionParameter of function)
    Else if functionAction is equal to "GETINVOICESFORACCOUNT" then
        Return Call internal.GetInvoicesForAccount with argument (actionParameter of function)
    Else if functionAction is equal to "GETCREDITCARDINFO" then
        Return Call internal.GetCreditCardInfo with argument (actionParameter of function)
    Else
        Return "Unable to query your request."
    End if
End method


Define method GetAccountInfo with arguments accountNumber
    If accountNumber is None then
        Set notFoundErrorMessage to Call internal.GenerateNotFoundErrorMessage
        Return notFoundErrorMessage
    End if

    Try

        Set query to "SELECT * FROM Accounts WHERE UserId = " + authenticatedUserId + " AND AccountNumber = '" + accountNumber + "'"


        Set account to Call internal.FromSqlRaw with argument query
        If account is None then
            Set notFoundErrorMessage to Call internal.GenerateNotFoundErrorMessage
            Return notFoundErrorMessage
        End if

        Set accountInfo to Call internal.MapAccountToAccountInfo with argument account
        Return accountInfo
    Catch Error e
        Return e.Message
End method

-- Other function call methods not displayed for the purposes of brevity
